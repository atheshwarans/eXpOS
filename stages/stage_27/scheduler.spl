//breakpoint;
multipush(BP);
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 12] = SP % 512;

//-----put here
//if paging is happening
if( [SYSTEM_STATUS_TABLE + 5] != 0 ) then
	print "paging happe";
	if( [PROCESS_TABLE + 15*16 + 4] == WAIT_DISK ) then
		[SYSTEM_STATUS_TABLE + 1] = 0; //idle
		[PROCESS_TABLE + 0*16 + 4] = RUNNING;
		PTBR = [PROCESS_TABLE + 0*16 + 14];
		PTLR = [PROCESS_TABLE + 0*16 + 15];
		SP = [PROCESS_TABLE + 0*16 + 11]*512 + [PROCESS_TABLE + 0*16 + 12];
		multipop(BP);
		return;

	else
		[SYSTEM_STATUS_TABLE + 1] = 15; //swap daemon is scheduled
		
		PTBR = [PROCESS_TABLE + 15*16 + 14];
		PTLR = [PROCESS_TABLE + 15*16 + 15];
		
		if ([PROCESS_TABLE + 15*16 + 4] == CREATED) then 
			print "swapper daemon scheduled";
			[PROCESS_TABLE + 15*16 + 4] = RUNNING;
			[PROCESS_TABLE + 15*16 + 9] = 0;
			SP=[PROCESS_TABLE + 15 * 16 + 13];
			BP = [[PROCESS_TABLE + 15 * 16 + 11] * 512];
			ireturn;
		else
			[PROCESS_TABLE + 15*16 + 4] = RUNNING;
			SP = [PROCESS_TABLE + 15*16 + 11]*512 + [PROCESS_TABLE + 15*16 + 12];
			multipop(BP);
			return;
		endif;
		
		
	endif;
endif;
//print "On the right track";
alias iter R0;
iter = 1;
while(iter <= 16) do
	if( ( [SYSTEM_STATUS_TABLE + 1]  + iter) % 16 == 0) then
		iter=iter + 1;
		continue;
	endif;
	if ( [PROCESS_TABLE + ( ( [SYSTEM_STATUS_TABLE + 1] + iter) % 16 ) * 16 + 1] != -1 ) then
		if ( [PROCESS_TABLE + ( ( [SYSTEM_STATUS_TABLE + 1] + iter) % 16 ) * 16 + 4] == CREATED ) then
			[SYSTEM_STATUS_TABLE + 1] =( [SYSTEM_STATUS_TABLE + 1] + iter ) % 16;
			[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = RUNNING;
			[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
			PTBR=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 14];
			PTLR=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 15];	
			SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
			BP = [[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512];
			//print [SYSTEM_STATUS_TABLE + 1];
			//breakpoint;
			ireturn;
		endif;
		if ( [PROCESS_TABLE + ( ( [SYSTEM_STATUS_TABLE + 1] + iter) % 16 ) * 16 + 4] == READY ) then
			[SYSTEM_STATUS_TABLE + 1] =( [SYSTEM_STATUS_TABLE + 1] + iter ) % 16;
			[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = RUNNING;
			PTBR=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 14];
			PTLR=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 15];
			SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 + [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 12];
			multipop(BP);
			return;
		endif; 
	endif;
	iter = iter + 1;
	
endwhile;
[SYSTEM_STATUS_TABLE + 1] = 0;
[PROCESS_TABLE + 4] = RUNNING;
PTBR=[PROCESS_TABLE + 14];
PTLR=[PROCESS_TABLE + 15];
SP = [PROCESS_TABLE + 11] * 512 + [PROCESS_TABLE + 12];
multipop(BP);
//breakpoint;
return;
