//int 12 - Logout system call
//can only be called from shell process (pid=2)
//arguments: nil
//returns: 0 if successful, -1 if permission denied

alias currentPID R4;
alias currentPTE R5;
alias userSP R6;

currentPID = [SYSTEM_STATUS_TABLE + 1];
currentPTE = PROCESS_TABLE + currentPID * 16;
userSP = SP;

//set mode flag to sys call number = 28
[currentPTE + 9] = 28;

//switch to kernel stack
[currentPTE + 13] = SP;
SP = [currentPTE + 11] * 512 -1;

//return -1: permission denied
//shell process can only call this sys call
if(currentPID!=2) then
	[ [PTBR + ( (userSP-1) / 512) * 2] * 512 + (userSP - 1) % 512] = -1;
	[currentPTE + 9] = 0;
	ireturn;
endif;

//call kill all of process manager module to terminate all processes except idle, init and shell
multipush(R4,R5,R6);
R1=5;
R2=[SYSTEM_STATUS_TABLE + 1];
call MOD_1;
multipop(R4,R5,R6);

//set the shell process to terminated state
[currentPTE + 4] = TERMINATED;

//starting IP of shell stored at first word of user stack 
[  [PTBR + 8 * 2]  * 512 ] = [ [PTBR + 4 * 2]  * 512 + 1 ];
[currentPTE + 13] = 8*512;

//set the login process to ready state
[PROCESS_TABLE + 16 + 4] = READY;

call SCHEDULER;

